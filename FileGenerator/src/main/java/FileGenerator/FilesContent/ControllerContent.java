package FileGenerator.FilesContent;

public class ControllerContent {

    public static String getControllerContent() {
        return "package com.myCompany.ProjectName.Controllers;\n"
                + "\n"
                + "import com.myCompany.ProjectName.Models.Invoice;\n"
                + "import com.myCompany.ProjectName.Models.InvoiceItem;\n"
                + "import com.myCompany.ProjectName.Service.InvoiceService;\n"
                + "import org.springframework.beans.factory.annotation.Autowired;\n"
                + "import org.springframework.stereotype.Controller;\n"
                + "import org.springframework.ui.Model;\n"
                + "import org.springframework.web.bind.annotation.*;\n"
                + "\n"
                + "import java.text.SimpleDateFormat;\n"
                + "import java.util.ArrayList;\n"
                + "import java.util.Date;\n"
                + "import java.util.List;\n"
                + "\n"
                + "@Controller\n"
                + "@RequestMapping(\"/invoices\")\n"
                + "public class ThymeleafController {\n"
                + "    @Autowired\n"
                + "    private InvoiceService invoiceService;\n"
                + "\n"
                + "    @GetMapping\n"
                + "    public String getAllInvoices(Model model) {\n"
                + "        List<Invoice> invoices = invoiceService.getAllInvoices();\n"
                + "        model.addAttribute(\"invoices\", invoices);\n"
                + "        return \"invoices\";\n"
                + "    }\n"
                + "\n"
                + "    @GetMapping(\"/{id}\")\n"
                + "    public String getInvoiceById(@PathVariable Long id, Model model) {\n"
                + "        Invoice invoice = invoiceService.getInvoiceById(id);\n"
                + "        model.addAttribute(\"invoice\", invoice);\n"
                + "        return \"invoice\";\n"
                + "    }\n"
                + "\n"
                + "    @GetMapping(\"/update/{id}\")\n"
                + "    public String showUpdateInvoiceForm(@PathVariable Long id, Model model) {\n"
                + "        Invoice updateInvoice = invoiceService.getInvoiceById(id);\n"
                + "        List<InvoiceItem> items = updateInvoice.getItems();\n"
                + "\n"
                + "        model.addAttribute(\"updateInvoice\", updateInvoice);\n"
                + "        model.addAttribute(\"items\", items);\n"
                + "        model.addAttribute(\"itemSize\", items.size());\n"
                + "        return \"updateInvoice\";\n"
                + "    }\n"
                + "\n"
                + "    @PostMapping(\"/update/{id}\")\n"
                + "    public String updateInvoice(@PathVariable Long id, @ModelAttribute(\"updateInvoice\") Invoice invoiceData) {\n"
                + "        Invoice updatedInvoice = new Invoice();\n"
                + "        updatedInvoice.setId(id);\n"
                + "        updatedInvoice.setInvoiceNumber(invoiceData.getInvoiceNumber());\n"
                + "        updatedInvoice.setDate(invoiceData.getDate());\n"
                + "\n"
                + "        if (invoiceData.getAmount() != null) {\n"
                + "            updatedInvoice.setAmount(invoiceData.getAmount());\n"
                + "        }\n"
                + "\n"
                + "        List<InvoiceItem> items = new ArrayList<>();\n"
                + "        for (InvoiceItem newItem : invoiceData.getItems()) {\n"
                + "            InvoiceItem item = new InvoiceItem();\n"
                + "            if (newItem.getItemName() == null) {\n"
                + "                continue;\n"
                + "            }\n"
                + "            item.setItemName(newItem.getItemName());\n"
                + "            item.setItemAmount(newItem.getItemAmount());\n"
                + "            item.setInvoice(updatedInvoice);\n"
                + "            items.add(item);\n"
                + "        }\n"
                + "        updatedInvoice.setItems(items);\n"
                + "        invoiceService.updateInvoice(updatedInvoice);\n"
                + "\n"
                + "        return \"redirect:/invoices\";\n"
                + "    }\n"
                + "\n"
                + "    @GetMapping(\"/add\")\n"
                + "    public String showAddInvoiceForm(Model model) {\n"
                + "        Invoice newInvoice = new Invoice();\n"
                + "        newInvoice.setItems(new ArrayList<>());\n"
                + "        newInvoice.getItems().add(new InvoiceItem()); // Add an initial empty item\n"
                + "        model.addAttribute(\"newInvoice\", newInvoice);\n"
                + "        return \"addInvoice\";\n"
                + "    }\n"
                + "\n"
                + "    @PostMapping(\"/add\")\n"
                + "    public String addInvoice(@ModelAttribute Invoice invoiceData) {\n"
                + "        Invoice newInvoice = new Invoice();\n"
                + "        newInvoice.setInvoiceNumber(invoiceData.getInvoiceNumber());\n"
                + "        newInvoice.setDate(invoiceData.getDate());\n"
                + "\n"
                + "        if (invoiceData.getAmount() != null) {\n"
                + "            newInvoice.setAmount(invoiceData.getAmount());\n"
                + "        }\n"
                + "\n"
                + "        List<InvoiceItem> items = new ArrayList<>();\n"
                + "        for (InvoiceItem newItem : invoiceData.getItems()) {\n"
                + "            InvoiceItem item = new InvoiceItem();\n"
                + "            if (newItem.getItemName() == null) {\n"
                + "                continue;\n"
                + "            }\n"
                + "            item.setItemName(newItem.getItemName());\n"
                + "            item.setItemAmount(newItem.getItemAmount());\n"
                + "            item.setInvoice(newInvoice);\n"
                + "            items.add(item);\n"
                + "        }\n"
                + "        newInvoice.setItems(items);\n"
                + "        invoiceService.addInvoice(newInvoice);\n"
                + "\n"
                + "        return \"redirect:/invoices\";\n"
                + "    }\n"
                + "\n"
                + "    @GetMapping(\"/delete/{id}\")\n"
                + "    public String deleteInvoice(@PathVariable Long id) {\n"
                + "        invoiceService.deleteInvoice(id);\n"
                + "        return \"redirect:/invoices\";\n"
                + "    }\n"
                + "}\n";
    }

}
